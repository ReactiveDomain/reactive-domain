
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.23.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace Metadata_Sample_App
{
    using Metadata_Sample_App;
    using ReactiveDomain;
    using ReactiveDomain.Messaging;
    using ReactiveDomain.Messaging.Bus;
    using Terminal.Gui;


    public partial class MessageWindow
    {
        private IBus _bus;
        private Messages.Sender _currentUser;
        public MessageWindow(InMemoryBus bus)
        {
            _bus = bus;
            InitializeComponent();
            quit.Clicked += () => Application.RequestStop();
            bus.Subscribe(new AdHocHandler<Messages.Greeting>(msg => RecieveGreetings(msg)));
            bus.Subscribe(new AdHocHandler<Messages.Farewell>(msg => RecieveFarewells(msg)));
            sendGreeting.Clicked += SendGreetings;
            sendFarewell.Clicked += SendFarewell;
            editMeMenuItem1.Action = () => { _currentUser = new Messages.Sender() { Name = "Alice" }; senderName.Text = _currentUser.Name; };
            editMeMenuItem2.Action = () => { _currentUser = new Messages.Sender() { Name = "Bob" }; senderName.Text = _currentUser.Name; };
        }
        private bool TryGetCurrentUser(out Messages.Sender user)
        {
            user = _currentUser;
            if (_currentUser == null)
            {
                MessageBox.Query(55, 7, "Error", "Please login via the login menu at the top ^^^ first.", "Ok");
                return false;
            }
            return true;
        }

        public void SendGreetings()
        {   
            //get the logged in user
            if(!TryGetCurrentUser(out var user)){ return;}
            //create message with greeting data
            var msg = new Messages.Greeting((string)msgText.Text);
            //add sender metadata to the message
            msg.WriteMetadatum<Messages.Sender>(user);
            _bus.Publish(msg);
        }
        public void SendFarewell()
        {
            //get the logged in user
            if(!TryGetCurrentUser(out var user)){ return;}
            //create message with Frarewell data
            var msg = new Messages.Farewell((string)msgText.Text);
            //add sender metadat to the message
            msg.WriteMetadatum<Messages.Sender>(user);
            _bus.Publish(msg);
        }
        public void RecieveGreetings(Messages.Greeting msg)
        {
            // message type
            msgType.Text = msg.GetType().Name;

            //read message data
            msgTextRecieved.Text = msg.Text;

            //read sender metadata
            msgFrom.Text = msg.ReadMetadatum<Messages.Sender>().Name;
        }
        public void RecieveFarewells(Messages.Farewell msg)
        {
            //message type
            msgType.Text = msg.GetType().Name;

            //read message data
            msgTextRecieved.Text = msg.Text;

            //read sender metadata
            msgFrom.Text = msg.ReadMetadatum<Messages.Sender>().Name;
        }
    }
}
